syntax = "proto3";

package paxos_rpc;

service Acceptor {
    rpc Prepare(PrepareRequest) returns (PrepareResponse) {}
    rpc Accept(AcceptRequest) returns (AcceptResponse) {}
    rpc Commit(CommitRequest) returns (CommitResponse) {}
    rpc Ping(PingRequest) returns (PingResponse) {}
    rpc TruncatePropose(TruncateProposeRequest) returns (TruncateProposeResponse) {}
    rpc Truncate(TruncateRequest) returns (TruncateResponse) {}
}

message PrepareRequest {
    uint64 proposal_number = 1;
    uint64 index = 2;
}

message PrepareResponse {
    bool has_accepted_value = 1;
    uint64 accepted_proposal = 2;
    string accepted_value = 3;
    uint64 min_proposal = 4;
}

message AcceptRequest {
    uint64 index = 1;
    uint64 proposal_number = 2;
    string value = 3;
}

message AcceptResponse {
    uint64 min_proposal = 1;
    uint64 first_unchosen_index = 2;
}

message CommitRequest {
    uint64 index = 1;
    string value = 2;
}

message CommitResponse {
    uint64 first_unchosen_index = 1;
}

// When truncating, we just query all 
message TruncateProposeRequest {}
message TruncateProposeResponse {
    uint64 index = 1;
}

message TruncateRequest {
    uint64 index = 1;
}

message TruncateResponse {}

message PingRequest {
    uint32 node_id = 1;
}

message PingResponse {
    uint32 node_id = 1;
}
